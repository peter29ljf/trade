---
description: Polymarket 技术文档
globs: 
alwaysApply: true
---

# Polymarket 技术文档

## 1. 简介
欢迎来到 Polymarket 的文档！在这里，开发者可以找到与 Polymarket 交互所需的所有信息，包括市场发现、解决方案、交易等。无论您是学术研究人员、做市商还是独立开发者，本文档都能帮助您入门。

## 2. 访问状态
请定期使用 `ban-status/` 端点检查账户的访问状态。如果返回值为 `true`，则需在 14 天内提供居住证明，否则账户将被限制为仅关闭状态。

## 3. CLOB API

### 3.1 系统概述
Polymarket 的订单簿（也称为"CLOB"或"BLOB"）是混合去中心化的，由操作员提供链下匹配服务，而结算则在链上非托管进行。

### 3.2 API 功能
Polymarket 订单簿 API 提供了一系列端点，允许做市商、交易者和其他用户以编程方式创建和管理市场订单。

### 3.3 安全性
Polymarket 的 Exchange 合约已通过 Chainsecurity 审计。操作员除了排序外没有特殊权限。

### 3.4 费用结构
费用基于输出资产征收，对于具有互补关系的二元期权必须对称以保持市场完整性。

## 4. 客户端使用

### 4.1 安装
```bash
pip install py-clob-client
```

### 4.2 初始化
```python
from py_clob_client.client import ClobClient

host: str = ""
key: str = ""
chain_id: int = 137

# 直接从 EOA 交易的客户端初始化
client = ClobClient(host, key=key, chain_id=chain_id)

# 使用与 Email/Magic 账户关联的 Polymarket 代理初始化
client = ClobClient(host, key=key, chain_id=chain_id, signature_type=1, funder=POLYMARKET_PROXY_ADDRESS)

# 使用与浏览器钱包关联的 Polymarket 代理初始化
client = ClobClient(host, key=key, chain_id=chain_id, signature_type=2, funder=POLYMARKET_PROXY_ADDRESS)
```

## 5. 认证机制

### 5.1 私钥认证（L1）
最高级别的认证通过 Polygon 私钥进行。私钥保持在用户控制下，操作员永远不会控制用户资金。

### 5.2 API 密钥认证（L2）
包括 API 密钥、密钥和密码的认证机制，用于向 Polymarket 的 CLOB 发出 API 请求。

## 6. 订单操作

### 6.1 订单类型
- **FOK (Fill-Or-Kill)**: 市价单，必须立即完全执行，否则整个订单将被取消
- **GTC (Good-Til-Cancelled)**: 限价单，一直有效直到被执行或取消
- **GTD (Good-Til-Day)**: 在指定日期前有效的订单，除非已被执行或取消

### 6.2 创建订单示例
```python
from py_clob_client.clob_types import OrderArgs, OrderType
from py_clob_client.order_builder.constants import BUY

# 创建限价单
order_args = OrderArgs(
    price=0.50,
    size=100.0,
    side=BUY,
    token_id="71321045679252212594626385532706912750332728571942532289631379312455583992563"
)
signed_order = client.create_order(order_args)

# 发送 GTC 订单
resp = client.post_order(signed_order, OrderType.GTC)
```

## 7. 市场数据

### 7.1 获取订单簿
```python
book = client.get_order_book("71321045679252212594626385532706912750332728571942532289631379312455583992563")
```

### 7.2 获取市场价格
```python
price = client.get_price(
    token_id="71321045679252212594626385532706912750332728571942532289631379312455583992563",
    side="buy"
)
```

## 8. WebSocket API
提供实时更新的 WebSocket 通道，使客户端可以保持近乎实时的订单、交易和市场视图。

## 9. 奖励机制
Polymarket 提供激励措施，旨在促进市场的供需双方。具体包括公共流动性奖励计划以及一次性公共 PNL/交易量竞赛。